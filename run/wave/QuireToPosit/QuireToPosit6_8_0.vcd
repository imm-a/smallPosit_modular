$version Generated by VerilatedVcd $end
$date Thu Sep 16 15:19:40 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 1 clock $end
  $var wire  1 3 io_inValid $end
  $var wire  1 6 io_outValid $end
  $var wire  8 5 io_positOut [7:0] $end
  $var wire 32 4 io_quireIn [31:0] $end
  $var wire  1 2 reset $end
  $scope module QuireToPosit6_8_0 $end
   $var wire  7 ( absRealScale [6:0] $end
   $var wire  1 1 clock $end
   $var wire  1 3 io_inValid $end
   $var wire  1 6 io_outValid $end
   $var wire  8 5 io_positOut [7:0] $end
   $var wire 32 4 io_quireIn [31:0] $end
   $var wire  5 . outRawFloat_fraction [4:0] $end
   $var wire  3 / outRawFloat_grs [2:0] $end
   $var wire  1 8 outRawFloat_isNaR $end
   $var wire  1 9 outRawFloat_isZero $end
   $var wire  4 0 outRawFloat_scale [3:0] $end
   $var wire  1 ' overflow $end
   $var wire 32 ) quireLeftShift [31:0] $end
   $var wire 32 * quireRightShift [31:0] $end
   $var wire 31 # quireXOR [30:0] $end
   $var wire  8 - realFGRS [7:0] $end
   $var wire  8 + realFGRSTmp1 [7:0] $end
   $var wire  8 , realFGRSTmp2 [7:0] $end
   $var wire  7 % realScale [6:0] $end
   $var wire  1 2 reset $end
   $var wire  6 $ scaleBias [5:0] $end
   $var wire  1 7 tailIsZero $end
   $var wire  1 & underflow $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000000000000000000000 #
b100000 $
b1110011 %
1&
0'
b0001101 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000 +
b00000000 ,
b00000000 -
b00000 .
b000 /
b1001 0
01
12
03
b00000000000000000000000000000000 4
b00000000 5
06
17
08
19
#1
11
#2
01
#3
11
#4
01
#5
11
#6
01
#7
11
#8
01
#9
11
#10
01
02
13
#11
11
16
#12
b0000000000000000001100000000000 #
b101101 $
b0000000 %
0&
b0000000 (
b00000000000000000001000000000000 )
b00000000000000000001000000000000 *
b0000 0
01
b00000000000000000001000000000000 4
07
09
#13
11
b01000000 5
#14
b0000000000000000100010000000000 #
b101111 $
b0000010 %
b0000010 (
b00000000000000011110000000000000 )
b00000000000000000001111000000000 *
b11100000 ,
b11100000 -
b11100 .
b0010 0
01
b00000000000000000111100000000000 4
#15
11
b01110111 5
#16
b0000000000000110000110000000000 #
b110010 $
b0000101 %
b0000101 (
b00000000010000010000000000000000 )
b00000000000000000001000001000000 *
b00000100 ,
b00000100 -
b00000 .
b100 /
b0101 0
01
b00000000000000100000100000000000 4
#17
11
b01111110 5
#18
b0000000000000010000000100000000 #
b110001 $
b0000100 %
b0000100 (
b00000000000111111110000000000000 )
b00000000000000000001111111100000 *
b11111110 ,
b11111110 -
b11111 .
b110 /
b0100 0
01
b00000000000000011111111000000000 4
#19
11
#20
b0000000000000110001000100000000 #
b110010 $
b0000101 %
b0000101 (
b00000000010000111100000000000000 )
b00000000000000000001000011110000 *
b00001111 ,
b00001111 -
b00001 .
b111 /
b0101 0
01
b00000000000000100001111000000000 4
#21
11
#22
b1000000000000000000000000000000 #
b111111 $
b0010010 %
1'
b0010010 (
b00000000000000000000000000000000 )
b00000000000000000010000000000000 *
b00000000 ,
b00000000 -
b00000 .
b000 /
b0110 0
01
b10000000000000000000000000000000 4
17
18
#23
11
b10000000 5
#24
01
#25
11
