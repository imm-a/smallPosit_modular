$version Generated by VerilatedVcd $end
$date Thu Sep 16 15:19:05 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 3 clock $end
  $var wire  8 6 io_A [7:0] $end
  $var wire  8 7 io_B [7:0] $end
  $var wire 32 8 io_E [31:0] $end
  $var wire  1 5 io_inValid $end
  $var wire  1 9 io_outValid $end
  $var wire  1 4 reset $end
  $scope module PositEMA6_8_0 $end
   $var wire  5 # absScale [4:0] $end
   $var wire  1 3 clock $end
   $var wire  5 % decA_fraction [4:0] $end
   $var wire  1 : decA_isNaR $end
   $var wire  1 ; decA_isZero $end
   $var wire  4 & decA_scale [3:0] $end
   $var wire  5 ' decB_fraction [4:0] $end
   $var wire  1 < decB_isNaR $end
   $var wire  1 = decB_isZero $end
   $var wire  4 ( decB_scale [3:0] $end
   $var wire 32 $ extSig [31:0] $end
   $var wire  1 * inValid_phase2 $end
   $var wire  1 . inValid_phase3 $end
   $var wire  8 6 io_A [7:0] $end
   $var wire  8 7 io_B [7:0] $end
   $var wire 32 8 io_E [31:0] $end
   $var wire  1 5 io_inValid $end
   $var wire  1 9 io_outValid $end
   $var wire  5 ) mulScale [4:0] $end
   $var wire  5 - mulScale_phase2 [4:0] $end
   $var wire 14 , mulSig_phase2 [13:0] $end
   $var wire  1 > outIsNaR $end
   $var wire  1 + outIsNaR_phase2 $end
   $var wire  1 / outIsNaR_phase3 $end
   $var wire  1 2 quireIsNaR $end
   $var wire 32 1 quireReg [31:0] $end
   $var wire  1 4 reset $end
   $var wire 32 0 shiftSig_phase3 [31:0] $end
   $var wire  7 ? sigA [6:0] $end
   $var wire  7 @ sigB [6:0] $end
   $var wire 14 A sigP [13:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000 #
b00000000000000000000000000000000 $
b00000 %
b1001 &
b00000 '
b1001 (
b10010 )
0*
0+
b00000000000000 ,
b00000 -
0.
0/
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
02
03
14
05
b00000000 6
b00000000 7
b00000000000000000000000000000000 8
09
0:
1;
0<
1=
0>
b0000000 ?
b0000000 @
b00000000000000 A
#1
13
#2
03
#3
13
#4
03
#5
13
#6
03
#7
13
#8
03
#9
13
#10
b0110 &
b1010 (
b00000 )
03
04
15
b01111111 6
b00000001 7
0;
0=
b0100000 ?
b0100000 @
b00010000000000 A
#11
b00000000000000000001000000000000 $
1*
b00010000000000 ,
13
#12
b01100 %
b0010 &
b1111 (
b00001 )
03
b10001011 6
b11000000 7
b1001100 ?
b1000000 @
b00110100000000 A
#13
b00001 #
b00000000000000000011010000000000 $
b00110100000000 ,
b00001 -
1.
b00000000000000000001000000000000 0
13
#14
b10010 %
b0001 &
b0011 (
b00100 )
03
b01101001 6
b01111000 7
b0110010 ?
b0100000 @
b00011001000000 A
#15
b00100 #
b00000000000000000001100100000000 $
b00011001000000 ,
b00100 -
b00000000000000000110100000000000 0
b00000000000000000001000000000000 1
13
b00000000000000000001000000000000 8
19
#16
b00000 %
b1001 &
b0000 (
b11001 )
03
b00000000 6
b01000000 7
1;
b0000000 ?
b00000000000000 A
#17
b00111 #
b00000000000000000000000000000000 $
b00000000000000 ,
b11001 -
b00000000000000011001000000000000 0
b00000000000000000111100000000000 1
13
b00000000000000000111100000000000 8
#18
b10000 %
b1110 &
b1111 (
b11101 )
03
b11101000 6
b11000000 7
0;
b1010000 ?
b1000000 @
b00110000000000 A
#19
b00011 #
b00000000000000000011000000000000 $
b00110000000000 ,
b11101 -
b00000000000000000000000000000000 0
b00000000000000100000100000000000 1
13
b00000000000000100000100000000000 8
#20
b00000 %
b1111 &
b0000 (
b11111 )
03
b11000000 6
b01000000 7
b1000000 ?
b0100000 @
b11100000000000 A
#21
b00001 #
b11111111111111111110000000000000 $
b11100000000000 ,
b11111 -
b00000000000000000000011000000000 0
13
#22
b1110 &
b0011 (
b00001 )
03
b00010000 6
b01111000 7
b0100000 ?
b00010000000000 A
#23
b00000000000000000001000000000000 $
b00010000000000 ,
b00001 -
b11111111111111111111000000000000 0
b00000000000000100000111000000000 1
13
b00000000000000100000111000000000 8
#24
b0110 &
b1110 (
b00100 )
03
b10000000 6
b00010000 7
1:
1>
b1000000 ?
b11100000000000 A
#25
b00100 #
b11111111111111111110000000000000 $
1+
b11100000000000 ,
b00100 -
b00000000000000000010000000000000 0
b00000000000000011111111000000000 1
13
b00000000000000011111111000000000 8
#26
b1010 (
b00000 )
03
b01111111 6
b00000001 7
0:
0>
b0100000 ?
b00010000000000 A
#27
b00000 #
b00000000000000000001000000000000 $
0+
b00010000000000 ,
b00000 -
1/
b11111111111111100000000000000000 0
b00000000000000100001111000000000 1
13
b00000000000000100001111000000000 8
#28
b01100 %
b0010 &
b1111 (
b00001 )
03
b10001011 6
b11000000 7
b1001100 ?
b1000000 @
b00110100000000 A
#29
b00001 #
b00000000000000000011010000000000 $
b00110100000000 ,
b00001 -
0/
b00000000000000000001000000000000 0
b10000000000000000000000000000000 1
12
13
b10000000000000000000000000000000 8
#30
03
#31
b00000000000000000110100000000000 0
13
