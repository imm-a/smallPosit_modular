$version Generated by VerilatedVcd $end
$date Thu Sep 16 15:18:19 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 E clock $end
  $var wire 32 G io_A [31:0] $end
  $var wire 32 H io_B [31:0] $end
  $var wire 32 I io_S [31:0] $end
  $var wire  1 F reset $end
  $scope module PositAdder32_0 $end
   $var wire  1 ) aGTb $end
   $var wire  1 E clock $end
   $var wire 29 # decA_fraction [28:0] $end
   $var wire  1 J decA_isNaR $end
   $var wire  1 $ decA_isZero $end
   $var wire  6 % decA_scale [5:0] $end
   $var wire 29 & decB_fraction [28:0] $end
   $var wire  1 K decB_isNaR $end
   $var wire  1 ' decB_isZero $end
   $var wire  6 ( decB_scale [5:0] $end
   $var wire 29 B decS_fraction [28:0] $end
   $var wire  1 L decS_isNaR $end
   $var wire  1 C decS_isZero $end
   $var wire  6 D decS_scale [5:0] $end
   $var wire  6 , greaterExp [5:0] $end
   $var wire 29 . greaterFrac [28:0] $end
   $var wire 31 2 greaterSig [30:0] $end
   $var wire  1 * greaterSign $end
   $var wire 32 G io_A [31:0] $end
   $var wire 32 H io_B [31:0] $end
   $var wire 32 I io_S [31:0] $end
   $var wire  6 ? normalShift [5:0] $end
   $var wire  1 > overflow $end
   $var wire 32 5 rawSumSig [31:0] $end
   $var wire  1 F reset $end
   $var wire  7 < scaleBias [6:0] $end
   $var wire  6 1 scale_diff [5:0] $end
   $var wire 33 @ shiftSig [32:0] $end
   $var wire 35 7 signSumSig [34:0] $end
   $var wire  6 - smallerExp [5:0] $end
   $var wire 29 / smallerFrac [28:0] $end
   $var wire 34 3 smallerSig [33:0] $end
   $var wire  1 + smallerSign $end
   $var wire  1 0 smallerZero $end
   $var wire  6 ; sumLZD [5:0] $end
   $var wire  8 = sumScale [7:0] $end
   $var wire  1 6 sumSign $end
   $var wire 34 9 sumXor [33:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000 #
1$
b100001 %
b00000000000000000000000000000 &
1'
b100001 (
0)
0*
0+
b100001 ,
b100001 -
b00000000000000000000000000000 .
b00000000000000000000000000000 /
10
b000000 1
b0100000000000000000000000000000 2
b0000000000000000000000000000000000 3
b00100000000000000000000000000000 5
06
b00100000000000000000000000000000000 7
b0110000000000000000000000000000000 9
b111110 ;
b0000000 <
b11100001 =
0>
b000001 ?
b000000000000000000000000000000000 @
b00000000000000000000000000000 B
1C
b100001 D
0E
1F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
0J
0K
0L
#1
1E
#2
0E
#3
1E
#4
0E
#5
1E
#6
0E
#7
1E
#8
0E
#9
1E
#10
0'
1*
b1000000000000000000000000000000 2
b01000000000000000000000000000000 5
16
b11000000000000000000000000000000000 7
b0100000000000000000000000000000000 9
0C
0E
0F
b11111111111111111111111111111111 H
b11111111111111111111111111111111 I
#11
1E
#12
0E
#13
1E
#14
0E
#15
1E
#16
0E
#17
1E
#18
0E
#19
1E
#20
0E
#21
1E
